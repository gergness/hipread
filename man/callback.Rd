% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/callbacks.R
\name{callback}
\alias{callback}
\alias{ChunkCallback}
\alias{HipChunkCallback}
\alias{HipSideEffectChunkCallback}
\alias{HipListCallback}
\alias{HipDataFrameCallback}
\title{Callback classes}
\description{
These classes are used to define callback behaviors, and are based
on readr's \code{\link[readr:callback]{readr::callback}} functions.
}
\details{
\itemize{
\item The callbacks \code{HipChunkCallback}, \code{HipListCallback} and
\code{HipSideEffectChunkCallback} should be identical to their readr
counterparts, but have been copied into hipread to ensure that they
work even if readr changes.
\item The callback \code{HipDataFrameCallback} is similar to
readr::DataFrameCallback() except that it uses \code{dplyr::bind_rows()}
instead of \code{rbind()} so that it is faster.
}
}
\keyword{internal}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ChunkCallback-new}{\code{ChunkCallback$new()}}
\item \href{#method-ChunkCallback-receive}{\code{ChunkCallback$receive()}}
\item \href{#method-ChunkCallback-continue}{\code{ChunkCallback$continue()}}
\item \href{#method-ChunkCallback-result}{\code{ChunkCallback$result()}}
\item \href{#method-ChunkCallback-finally}{\code{ChunkCallback$finally()}}
\item \href{#method-ChunkCallback-clone}{\code{ChunkCallback$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChunkCallback-new"></a>}}
\if{latex}{\out{\hypertarget{method-ChunkCallback-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChunkCallback$new(callback)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChunkCallback-receive"></a>}}
\if{latex}{\out{\hypertarget{method-ChunkCallback-receive}{}}}
\subsection{Method \code{receive()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChunkCallback$receive(data, index)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChunkCallback-continue"></a>}}
\if{latex}{\out{\hypertarget{method-ChunkCallback-continue}{}}}
\subsection{Method \code{continue()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChunkCallback$continue()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChunkCallback-result"></a>}}
\if{latex}{\out{\hypertarget{method-ChunkCallback-result}{}}}
\subsection{Method \code{result()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChunkCallback$result()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChunkCallback-finally"></a>}}
\if{latex}{\out{\hypertarget{method-ChunkCallback-finally}{}}}
\subsection{Method \code{finally()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChunkCallback$finally()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChunkCallback-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ChunkCallback-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChunkCallback$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super class}{
\code{\link[hipread:ChunkCallback]{hipread::ChunkCallback}} -> \code{HipChunkCallback}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-HipChunkCallback-clone}{\code{HipChunkCallback$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="hipread" data-topic="ChunkCallback" data-id="continue"><a href='../../hipread/html/ChunkCallback.html#method-ChunkCallback-continue'><code>hipread::ChunkCallback$continue()</code></a></span></li>
<li><span class="pkg-link" data-pkg="hipread" data-topic="ChunkCallback" data-id="finally"><a href='../../hipread/html/ChunkCallback.html#method-ChunkCallback-finally'><code>hipread::ChunkCallback$finally()</code></a></span></li>
<li><span class="pkg-link" data-pkg="hipread" data-topic="ChunkCallback" data-id="initialize"><a href='../../hipread/html/ChunkCallback.html#method-ChunkCallback-initialize'><code>hipread::ChunkCallback$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="hipread" data-topic="ChunkCallback" data-id="receive"><a href='../../hipread/html/ChunkCallback.html#method-ChunkCallback-receive'><code>hipread::ChunkCallback$receive()</code></a></span></li>
<li><span class="pkg-link" data-pkg="hipread" data-topic="ChunkCallback" data-id="result"><a href='../../hipread/html/ChunkCallback.html#method-ChunkCallback-result'><code>hipread::ChunkCallback$result()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HipChunkCallback-clone"></a>}}
\if{latex}{\out{\hypertarget{method-HipChunkCallback-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HipChunkCallback$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super classes}{
\code{\link[hipread:ChunkCallback]{hipread::ChunkCallback}} -> \code{\link[hipread:HipChunkCallback]{hipread::HipChunkCallback}} -> \code{HipSideEffectChunkCallback}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-HipSideEffectChunkCallback-new}{\code{HipSideEffectChunkCallback$new()}}
\item \href{#method-HipSideEffectChunkCallback-receive}{\code{HipSideEffectChunkCallback$receive()}}
\item \href{#method-HipSideEffectChunkCallback-continue}{\code{HipSideEffectChunkCallback$continue()}}
\item \href{#method-HipSideEffectChunkCallback-clone}{\code{HipSideEffectChunkCallback$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="hipread" data-topic="ChunkCallback" data-id="finally"><a href='../../hipread/html/ChunkCallback.html#method-ChunkCallback-finally'><code>hipread::ChunkCallback$finally()</code></a></span></li>
<li><span class="pkg-link" data-pkg="hipread" data-topic="ChunkCallback" data-id="result"><a href='../../hipread/html/ChunkCallback.html#method-ChunkCallback-result'><code>hipread::ChunkCallback$result()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HipSideEffectChunkCallback-new"></a>}}
\if{latex}{\out{\hypertarget{method-HipSideEffectChunkCallback-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HipSideEffectChunkCallback$new(callback)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HipSideEffectChunkCallback-receive"></a>}}
\if{latex}{\out{\hypertarget{method-HipSideEffectChunkCallback-receive}{}}}
\subsection{Method \code{receive()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HipSideEffectChunkCallback$receive(data, index)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HipSideEffectChunkCallback-continue"></a>}}
\if{latex}{\out{\hypertarget{method-HipSideEffectChunkCallback-continue}{}}}
\subsection{Method \code{continue()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HipSideEffectChunkCallback$continue()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HipSideEffectChunkCallback-clone"></a>}}
\if{latex}{\out{\hypertarget{method-HipSideEffectChunkCallback-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HipSideEffectChunkCallback$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super classes}{
\code{\link[hipread:ChunkCallback]{hipread::ChunkCallback}} -> \code{\link[hipread:HipChunkCallback]{hipread::HipChunkCallback}} -> \code{HipListCallback}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-HipListCallback-new}{\code{HipListCallback$new()}}
\item \href{#method-HipListCallback-receive}{\code{HipListCallback$receive()}}
\item \href{#method-HipListCallback-result}{\code{HipListCallback$result()}}
\item \href{#method-HipListCallback-finally}{\code{HipListCallback$finally()}}
\item \href{#method-HipListCallback-clone}{\code{HipListCallback$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="hipread" data-topic="ChunkCallback" data-id="continue"><a href='../../hipread/html/ChunkCallback.html#method-ChunkCallback-continue'><code>hipread::ChunkCallback$continue()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HipListCallback-new"></a>}}
\if{latex}{\out{\hypertarget{method-HipListCallback-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HipListCallback$new(callback)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HipListCallback-receive"></a>}}
\if{latex}{\out{\hypertarget{method-HipListCallback-receive}{}}}
\subsection{Method \code{receive()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HipListCallback$receive(data, index)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HipListCallback-result"></a>}}
\if{latex}{\out{\hypertarget{method-HipListCallback-result}{}}}
\subsection{Method \code{result()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HipListCallback$result()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HipListCallback-finally"></a>}}
\if{latex}{\out{\hypertarget{method-HipListCallback-finally}{}}}
\subsection{Method \code{finally()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HipListCallback$finally()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HipListCallback-clone"></a>}}
\if{latex}{\out{\hypertarget{method-HipListCallback-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HipListCallback$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super classes}{
\code{\link[hipread:ChunkCallback]{hipread::ChunkCallback}} -> \code{\link[hipread:HipChunkCallback]{hipread::HipChunkCallback}} -> \code{HipDataFrameCallback}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-HipDataFrameCallback-new}{\code{HipDataFrameCallback$new()}}
\item \href{#method-HipDataFrameCallback-receive}{\code{HipDataFrameCallback$receive()}}
\item \href{#method-HipDataFrameCallback-result}{\code{HipDataFrameCallback$result()}}
\item \href{#method-HipDataFrameCallback-finally}{\code{HipDataFrameCallback$finally()}}
\item \href{#method-HipDataFrameCallback-clone}{\code{HipDataFrameCallback$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="hipread" data-topic="ChunkCallback" data-id="continue"><a href='../../hipread/html/ChunkCallback.html#method-ChunkCallback-continue'><code>hipread::ChunkCallback$continue()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HipDataFrameCallback-new"></a>}}
\if{latex}{\out{\hypertarget{method-HipDataFrameCallback-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HipDataFrameCallback$new(callback)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HipDataFrameCallback-receive"></a>}}
\if{latex}{\out{\hypertarget{method-HipDataFrameCallback-receive}{}}}
\subsection{Method \code{receive()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HipDataFrameCallback$receive(data, index)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HipDataFrameCallback-result"></a>}}
\if{latex}{\out{\hypertarget{method-HipDataFrameCallback-result}{}}}
\subsection{Method \code{result()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HipDataFrameCallback$result()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HipDataFrameCallback-finally"></a>}}
\if{latex}{\out{\hypertarget{method-HipDataFrameCallback-finally}{}}}
\subsection{Method \code{finally()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HipDataFrameCallback$finally()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HipDataFrameCallback-clone"></a>}}
\if{latex}{\out{\hypertarget{method-HipDataFrameCallback-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HipDataFrameCallback$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
